*** ist.py	2020-06-23 09:20:53.368413966 +0100
--- ist-ssl.py	2020-06-23 15:41:39.606301690 +0100
***************
*** 46,54 ****
  }
  
  class Introspect:
!     def __init__ (self, host, port, filename):
! 
!         self.host_url = "http://" + host + ":" + str(port) + "/"
          self.filename = filename
  
      def get (self, path):
--- 46,61 ----
  }
  
  class Introspect:
!     def __init__ (self, host, port, filename, ssl_vars):
!         if ssl_vars:
!             self.host_url = "https://" + host + ":" + str(port) + "/"
!             self.ca_file = ssl_vars['ca_file']
!             self.cert_file = ssl_vars['cert_file']
!             self.key_file = ssl_vars['key_file']
!             self.has_ssl = True
!         else:
!             self.host_url = "http://" + host + ":" + str(port) + "/"
!             self.has_ssl = False
          self.filename = filename
  
      def get (self, path):
***************
*** 73,79 ****
                      headers['X-Auth-Token'] = token
                  if debug: print "DEBUG: retrieving url " + url
                  try:
!                     response = requests.get(url,headers=headers)
                      response.raise_for_status()
                  except requests.exceptions.HTTPError:
                      print 'The server couldn\'t fulfill the request.'
--- 80,92 ----
                      headers['X-Auth-Token'] = token
                  if debug: print "DEBUG: retrieving url " + url
                  try:
!                     if self.has_ssl:
!                         response = requests.get(url,headers=headers,
!                                                 verify=self.ca_file, 
!                                                 cert=(self.cert_file, self.key_file)
!                                                 )
!                     else:
!                         response = requests.get(url,headers=headers)
                      response.raise_for_status()
                  except requests.exceptions.HTTPError:
                      print 'The server couldn\'t fulfill the request.'
***************
*** 582,588 ****
      common_parser.add_argument('--max_width', type=int,
                                 help="Max width per column")
  
!     def __init__(self, parser, host, port, filename):
  
          host = host or '127.0.0.1'
          if port is None:
--- 595,601 ----
      common_parser.add_argument('--max_width', type=int,
                                 help="Max width per column")
  
!     def __init__(self, parser, host, port, filename, ssl_vars):
  
          host = host or '127.0.0.1'
          if port is None:
***************
*** 592,598 ****
              except:
                  port = self.IntrospectPortMap[ServiceMap[cli_type] + ':0']
  
!         self.IST = Introspect(host, port, filename)
  
          self.subparser = parser.add_subparsers()
  
--- 605,611 ----
              except:
                  port = self.IntrospectPortMap[ServiceMap[cli_type] + ':0']
  
!         self.IST = Introspect(host, port, filename, ssl_vars)
  
          self.subparser = parser.add_subparsers()
  
***************
*** 696,703 ****
  
  class CLI_cfg_schema(CLI_basic):
  
!     def __init__(self, parser, host, port, filename):
!         CLI_basic.__init__(self, parser, host, port, filename)
          self.add_parse_args()
  
      def add_parse_args(self):
--- 709,716 ----
  
  class CLI_cfg_schema(CLI_basic):
  
!     def __init__(self, parser, host, port, filename, ssl_vars):
!         CLI_basic.__init__(self, parser, host, port, filename, ssl_vars)
          self.add_parse_args()
  
      def add_parse_args(self):
***************
*** 760,767 ****
  
  class CLI_cfg_svcmon(CLI_basic):
  
!     def __init__(self, parser, host, port, filename):
!         CLI_basic.__init__(self, parser, host, port, filename)
          self.add_parse_args()
  
      def add_parse_args(self):
--- 773,780 ----
  
  class CLI_cfg_svcmon(CLI_basic):
  
!     def __init__(self, parser, host, port, filename, ssl_vars):
!         CLI_basic.__init__(self, parser, host, port, filename, ssl_vars)
          self.add_parse_args()
  
      def add_parse_args(self):
***************
*** 782,789 ****
  
  class CLI_ctr(CLI_basic):
  
!     def __init__(self, parser, host, port, filename):
!         CLI_basic.__init__(self, parser, host, port, filename)
          self.add_parse_args()
  
      def add_parse_args(self):
--- 795,802 ----
  
  class CLI_ctr(CLI_basic):
  
!     def __init__(self, parser, host, port, filename, ssl_vars):
!         CLI_basic.__init__(self, parser, host, port, filename, ssl_vars)
          self.add_parse_args()
  
      def add_parse_args(self):
***************
*** 1302,1309 ****
          self.IST.showRoute_CTR(args.last, mode)
  
  class CLI_vr(CLI_basic):
!     def __init__(self, parser, host, port, filename):
!         CLI_basic.__init__(self, parser, host, port, filename)
          self.add_parse_args()
  
      def add_parse_args(self):
--- 1315,1322 ----
          self.IST.showRoute_CTR(args.last, mode)
  
  class CLI_vr(CLI_basic):
!     def __init__(self, parser, host, port, filename, ssl_vars):
!         CLI_basic.__init__(self, parser, host, port, filename, ssl_vars)
          self.add_parse_args()
  
      def add_parse_args(self):
***************
*** 1843,1850 ****
  
  class CLI_collector(CLI_basic):
  
!     def __init__(self, parser, host, port, filename):
!         CLI_basic.__init__(self, parser, host, port, filename)
          self.add_parse_args()
  
      def add_parse_args(self):
--- 1856,1863 ----
  
  class CLI_collector(CLI_basic):
  
!     def __init__(self, parser, host, port, filename, ssl_vars):
!         CLI_basic.__init__(self, parser, host, port, filename, ssl_vars)
          self.add_parse_args()
  
      def add_parse_args(self):
***************
*** 1997,2018 ****
      if '--debug' in argv:
          debug = True
  
      parser = argparse.ArgumentParser(prog='ist',
          description='A script to make Contrail Introspect output CLI friendly.')
!     parser.add_argument('--version',  action="store_true",  help="Script version")
!     parser.add_argument('--debug',    action="store_true",  help="Verbose mode")
!     parser.add_argument('--host',     type=str,             help="Introspect host address. Default: localhost")
!     parser.add_argument('--port',     type=int,             help="Introspect port number")
!     parser.add_argument('--proxy',    type=str,             help="Introspect proxy URL")
!     parser.add_argument('--token',    type=str,             help="Token for introspect proxy requests")
!     parser.add_argument('--file',     type=str,             help="Introspect file")
  
      roleparsers = parser.add_subparsers()
  
      for svc in sorted(ServiceMap.iterkeys()):
          p = roleparsers.add_parser(svc, help=ServiceMap[svc])
          if 'CLI_%s' % (svc) in globals():
!             globals()['CLI_%s' % (svc)](p, host, port, filename)
  
      args, unknown = parser.parse_known_args()
      args.func(args)
--- 2010,2048 ----
      if '--debug' in argv:
          debug = True
  
+     ssl_vars = dict()
+     try:
+         ssl_vars['key_file'] = argv[argv.index('--key_file') + 1]
+     except ValueError:
+         pass
+     try:
+         ssl_vars['ca_file'] = argv[argv.index('--ca_file') + 1]
+     except ValueError:
+         pass
+     try:
+         ssl_vars['cert_file'] = argv[argv.index('--cert_file') + 1]
+     except ValueError:
+         pass
+ 
      parser = argparse.ArgumentParser(prog='ist',
          description='A script to make Contrail Introspect output CLI friendly.')
!     parser.add_argument('--version',   action="store_true",  help="Script version")
!     parser.add_argument('--debug',     action="store_true",  help="Verbose mode")
!     parser.add_argument('--host',      type=str,             help="Introspect host address. Default: localhost")
!     parser.add_argument('--port',      type=int,             help="Introspect port number")
!     parser.add_argument('--proxy',     type=str,             help="Introspect proxy URL")
!     parser.add_argument('--token',     type=str,             help="Token for introspect proxy requests")
!     parser.add_argument('--file',      type=str,             help="Introspect file")
!     parser.add_argument('--key_file',  type=str,             help="SSL key file")
!     parser.add_argument('--ca_file',   type=str,             help="SSL ca file")
!     parser.add_argument('--cert_file', type=str,             help="SSL cert file")
  
      roleparsers = parser.add_subparsers()
  
      for svc in sorted(ServiceMap.iterkeys()):
          p = roleparsers.add_parser(svc, help=ServiceMap[svc])
          if 'CLI_%s' % (svc) in globals():
!             globals()['CLI_%s' % (svc)](p, host, port, filename, ssl_vars)
  
      args, unknown = parser.parse_known_args()
      args.func(args)
